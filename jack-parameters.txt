jack.android.api-level.check:
     Check compatibility with the Android platform (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.android.min-api-level:
     Minimum Android API level compatibility (default is '1')
     an integer belonging to [1 .. 2147483647]
jack.assert.policy:
     Assert statement policy (default is 'runtime')
     {always,never,runtime} (case insensitive) where
          always: always check assert statements
          never: remove assert statements
          runtime: check according to runtime configuration
jack.classpath.strict:
     Do not ignore missing or malformed class path entries (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.import.jar.debug-info:
     Keep debug info when importing Jars (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.import.resource.policy:
     Defines the policy to follow concerning resource collision (default is 'fail')
     {keep-first,fail} (case insensitive) where
          keep-first: keep the first element encountered
          fail: fail when a collision occurs
jack.import.type.policy:
     Defines the policy to follow concerning type collision (default is 'fail')
     {keep-first,fail} (case insensitive) where
          keep-first: keep the first element encountered
          fail: fail when a collision occurs
jack.java.source.version:
     Java source version (default is '1.7')
     {1.3,1.4,1.5,5.0,5,1.6,6.0,6,1.7,7.0,7,1.8,8.0,8} (case insensitive)
jack.obfuscation.mapping.dump:
     Print the obfuscation mapping (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.mapping.dump.file:
     File where the mapping will be emitted (default is '-[UTF-8]')
     a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error, can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
jack.preprocessor:
     Enable the Jack preprocessor (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.preprocessor.file:
     Preprocessor source file
     required if 'jack.preprocessor' is set to true
     a path to a file (must exist, be readable), can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
jack.reporter:
     Define which reporter will be used (default is 'default')
     {default,sdk}
jack.reporter.file:
     File where the reporter will write (default is '--[UTF-8]')
     required if 'jack.reporter' is set to 'default' or 'jack.reporter' is set to 'sdk'
     a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error, can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
jack.reporter.level.file:
     File where the reporter will write by level (default is '')
     [<pair-1>[,...[,<pair-n>]]] where <pair-i> is <level>=<file> where <level> is {error,warning,info} (case insensitive) and where <file> is a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error, can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)

Provisional properties (subject to change):

config.printer:
     Define which config printer to use (default is 'none')
     {none,properties-file}
config.printer.file:
     The file where to print the config (default is '-')
     a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error
jack.android.remove-typedef:
     Removes @StringDef, @IntDef and all annotations annotated with them (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.annotation-processor:
     Enable annotation processors (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.annotation-processor.class.output:
     Output folder for classes generated by annotation processors
     a path to a directory (must exist, be readable, be writable)
jack.annotation-processor.manual:
     run only specified annotation processors (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.annotation-processor.manual.list:
     Annotation processor class names
     required if 'jack.annotation-processor.manual' is set to true
     [<class-1>[,...[,<class-n>]]] where <class-i> is a java class name (e.g. java.lang.Object)
jack.annotation-processor.options:
     Options for annotation processors (default is '')
     [<pair-1>[,...[,<pair-n>]]] where <pair-i> is <option>=<value> where <option> is an annotation processor option name and where <value> is an annotation processor option value
jack.annotation-processor.path:
     Use annotation processor classpath for annotation processor loading (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.annotation-processor.path.list:
     Annotation processor classpath
     required if 'jack.annotation-processor.path' is set to true
     [<file-or-dir-1>[:...[:<file-or-dir-n>]]] where <file-or-dir-i> is a path to a file or directory (must exist, be readable)
jack.annotation-processor.source.output:
     Output folder for sources generated by annotation processors
     a path to a directory (must exist, be readable, be writable)
jack.annotation.runtimeinvisible:
     Emit annotations that are runtime invisible (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.annotation.runtimeinvisible.parameter:
     Emit parameters annotations that are runtime invisible (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.annotation.runtimevisible:
     Emit annotations that are runtime visible (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.annotation.runtimevisible.parameter:
     Emit parameters annotations that are runtime visible (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.classpath:
     Classpath (default is '')
     [<jack-or-jar-1>[:...[:<jack-or-jar-n>]]] where <jack-or-jar-i> is a path to a Jack library or a Jar
jack.classpath.default-libraries:
     Use default libraries as first classpath entries (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.classpath.jar.debug-info:
     Keep debug info when using Jars on classpath (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.classpath.jar.tolerant:
     Tolerate malformed Jars on classpath (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex:
     Generate dex file (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex.debug.lines:
     Emit line number debug info into generated dex (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex.debug.source:
     Emit source file debug info into generated dex (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex.debug.vars:
     Emit local variable debug info into generated dex (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex.debug.vars.synthetic:
     Emit synthetic local variable debug info into generated dex (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex.forcejumbo:
     Force string opcodes to be emitted as jumbo in dex (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex.optimize:
     Define if Dex optimizations are activated (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex.output.container:
     Output container type
     required if 'jack.dex' is set to true
     {dir,zip} (case insensitive)
jack.dex.output.dir:
     Output folder for dex
     required if 'jack.dex.output.container' is set to 'dir'
     a path to an output directory (must exist, be readable, be writable)
jack.dex.output.multidex.legacy:
     Enable multidex compatibility support for devices that do not have native runtime support (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.dex.output.policy:
     Define which policy will be used to emit dex files (default is 'single-dex')
     {minimal-multidex,multidex,single-dex} where
          minimal-multidex: allow emitting several dex files, keeping the first dex (main dex) as small as possible
          multidex: allow emitting several dex files
          single-dex: only emit one dex file
jack.dex.output.zip:
     Output zip archive for dex
     required if 'jack.dex.output.container' is set to 'zip'
     a path to a zip archive (must be readable, be writable)
jack.import.jar.tolerant:
     Tolerate import of malformed Jars (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.import.meta:
     Meta to import (default is '')
     [<dir-1>[,...[,<dir-n>]]] where <dir-i> is a path to a directory (must exist, be readable)
jack.import.resource:
     Resources to import (default is '')
     [<dir-1>[:...[:<dir-n>]]] where <dir-i> is a path to a directory (must exist, be readable)
jack.incremental:
     Enable incremental mode (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.incremental.log:
     Enable incremental log (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.input.filter:
     Inputs filter (default is 'no-filter')
     {incremental,no-filter}
jack.internal.dropmethodbody:
     Drop method bodies when they are no longer useful (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.internal.filter.method:
     Define which filter will be used for methods (default is 'all-methods')
     {all-methods,method-with-signature,reject-all-methods,supported-methods}
jack.internal.filter.method.signature:
     Method signature that will be accepted by the filter
     required if 'jack.internal.filter.method' is set to 'method-with-signature'
     a method signature (for instance "methodname(ILpackage1/package2/Classname;)B")
jack.internal.jayce.loader.classpath.policy:
     Hint on default load policy for classpath entries (default is 'type')
     {full,structure,type} where
          full: always read full information
          structure: start by always reading structure information (ie members, annotations, markers etc)
          type: start by only reading type and name information
jack.internal.jayce.loader.import.policy:
     Hint on default load policy for import entries (default is 'type')
     {full,structure,type} where
          full: always read full information
          structure: start by always reading structure information (ie members, annotations, markers etc)
          type: start by only reading type and name information
jack.internal.structure.print:
     List all types and members (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.internal.structure.print.file:
     File containing the list of all types and members (default is '-[UTF-8]')
     required if 'jack.internal.structure.print' is set to true
     a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error, can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
jack.lambda.anonymous:
     Enable lambda support with an anonymous class (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.legacy.dx.initialvalue.class:
     Emit class literal as initial value of field (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.legacy.runtime.initialvalue.string:
     Emit string literal as initial value of field (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.legacy.runtime.visibilitybridges:
     Generate visibility bridges (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.library:
     Generate jack library (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.library.dex:
     Generate dex files in library (default is 'true')
     required if 'jack.library' is set to true
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.library.digest:
     Generate message digest in Jack library (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.library.digest.algo:
     Message digest algorithm use in Jack library (default is 'SHA')
     required if 'jack.library.digest' is set to true
     {MD2,MD5,SHA,SHA-224,SHA-256,SHA-384,SHA-512} (case sensitive)
jack.library.import:
     Libraries to import (default is '')
     [<jack-or-jar-1>[,...[,<jack-or-jar-n>]]] where <jack-or-jar-i> is a path to a Jack library or a Jar
jack.library.output.container:
     Library output container type
     required if 'jack.library' is set to true
     {dir,zip} (case insensitive)
jack.library.output.dir:
     Output folder for library
     required if 'jack.library' is set to true and 'jack.library.output.container' is set to 'dir'
     a path to a directory (must exist, be readable, be writable)
jack.library.output.zip:
     Output zip archive for library
     required if 'jack.library' is set to true and 'jack.library.output.container' is set to 'zip' or 'jack.library.from-incremental-folder' is set to true
     a path to a zip archive (must be readable, be writable)
jack.library.prebuilt.use:
     Use prebuilt files from library (default is 'true')
     required if 'jack.dex' is set to true or 'jack.library' is set to true
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.classdictionary:
     Use obfuscation dictionary for classes (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.classdictionary.file:
     Obfuscation dictionary for classes
     required if 'jack.obfuscation.classdictionary' is set to true
     a path to a file or directory
jack.obfuscation.dictionary:
     Use obfuscation dictionary for members (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.dictionary.file:
     Obfuscation dictionary for members
     required if 'jack.obfuscation.dictionary' is set to true
     a path to a file or directory
jack.obfuscation.flattenpackage:
     Change package for all renamed packages (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.flattenpackage.package:
     Enclosing package for all renamed packages
     required if 'jack.obfuscation.flattenpackage' is set to true
     a java package name (e.g. com.android)
jack.obfuscation.mapping:
     Use mapping for types and members (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.mapping.collision-policy:
     Abort obfuscation when a mapping collision is detected (default is 'fail')
     {ignore,fail} (case insensitive)
jack.obfuscation.mapping.file:
     File containing the mapping of all types and members (default is 'mapping.txt')
     a path to a file or directory
jack.obfuscation.mixedcaseclassname:
     Use mixed case class name when obfuscating (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.nameprovider:
     Define which nameprovider to use (default is 'lower-case')
     {lower-case,mixed-case}
jack.obfuscation.packagedictionary:
     Use obfuscation dictionary for packages (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.packagedictionary.file:
     Obfuscation dictionary for packages
     required if 'jack.obfuscation.packagedictionary' is set to true
     a path to a file or directory
jack.obfuscation.renamesourcefile:
     Rename source file (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.renamesourcefile.newname:
     New source file name (default is '')
     required if 'jack.obfuscation.renamesourcefile' is set to true
     a path to a file or directory
jack.obfuscation.repackageclasses:
     Change package for all renamed classes (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.obfuscation.repackageclasses.package:
     Enclosing package for all renamed classes
     required if 'jack.obfuscation.repackageclasses' is set to true
     a java package name (e.g. com.android)
jack.obfuscation.uniqueclassmembernames:
     All members with the same name must have the same obfuscated name (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.optimization.def-use-simplifier:
     Optimize def/use chain (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.optimization.enum.switch:
     Optimize enum switch (default is 'never')
     {feedback,always,never} (case insensitive)
jack.optimization.expression-simplifier:
     Optimize expressions using constants (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.optimization.if-simplifier:
     Optimize 'if' expressions using a boolean constant (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.optimization.inner-class.accessors:
     Avoid creating synthethic accessors for outer class private fields and methods (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.optimization.not-simplifier:
     Optimize '!' operator (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.optimization.null-instanceof-simplifier:
     Optimize null instanceof (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.optimization.tail-recursion:
     Optimize tail recursive calls (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.optimization.use-def-simplifier:
     Optimize use/def chain (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.repackaging:
     Enable repackaging (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.repackaging.files:
     Jarjar rules files
     required if 'jack.repackaging' is set to true
     <file-1>[,<file-2>[,...[,<file-n>]]] where <file-i> is a path to a file (must exist, be readable), can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
jack.sanity-checks:
     Compiler sanity checks (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.seed.dump.file:
     File where the seeds will be printed (default is '-[UTF-8]')
     a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error, can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
jack.shrink.keep.enclosing.method:
     Keep the enclosing method of anonymous classes (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.shrob:
     Enable shrink and obfuscation features (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.shrob.seed.searchinhierarchy:
     Search for shrob seeds in hierarchy (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.source:
     Sources to compile (default is '')
     [<file-or-dir-1>[:...[:<file-or-dir-n>]]] where <file-or-dir-i> is a path to a file (must exist, be readable) or a path to a directory (must exist, be readable)
jack.source.digest:
     Generate digest for source identification (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.source.digest.algo:
     Digest algorithm use for source identification (default is 'SHA')
     required if 'jack.source.digest' is set to true
     {MD2,MD5,SHA,SHA-224,SHA-256,SHA-384,SHA-512} (case sensitive)
jack.source.path:
     Source path (default is '')
     [<file-or-dir-1>[:...[:<file-or-dir-n>]]] where <file-or-dir-i> is a path to a file or directory (must exist, be readable)
jack.statistic.source:
     Enable compiled files statistics (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.transformation.reusesyncvariable:
     Reduce the 'get class' usage in static synchronized methods by reusing a local variable (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
jack.verbose.level:
     Verbosity level (default is 'WARNING')
     {ERROR,WARNING,INFO,DEBUG,TRACE} (case sensitive)
sched.data:
     Define which data processor to use (default is 'none')
     {dot,none,text}
sched.dotfile:
     Define in which file generates data as dot (default is 'schedlib.dot')
     a path to a file or directory
sched.failedstop:
     Define if the SchedLib stop at the first failed (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
sched.filter.skip-adapter:
     Skip adapter as soon as possible (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
sched.genetic.add:
     Probability to add a runner (default is '0.15')
     a probability belonging to [0 (never) .. 1 (always)]
sched.genetic.add.post:
     Probability to add a satisfied runner after a satisfied one (default is '0.3')
     a probability belonging to [0 (never) .. 1 (always)]
sched.genetic.add.pre:
     Probability to add a runner before another one in order to satisfied it (default is '0.9')
     a probability belonging to [0 (never) .. 1 (always)]
sched.genetic.duration:
     Maximum time (in milliseconds) to spend before stopping (default is '60000')
     an integer belonging to [0 .. 2147483647]
sched.genetic.elite:
     Size of the elite population (default is '2')
     an integer belonging to [0 .. 2147483647]
sched.genetic.move.satisfied:
     Probability to move a satisfied runner (default is '0.6')
     a probability belonging to [0 (never) .. 1 (always)]
sched.genetic.population:
     Size of the population (default is '10')
     an integer belonging to [1 .. 2147483647]
sched.genetic.remove:
     Probability to remove a runner (default is '0.5')
     a probability belonging to [0 (never) .. 1 (always)]
sched.genetic.remove.unsatisfied:
     Probability to remove an unsatisfied runner (default is '0.6')
     a probability belonging to [0 (never) .. 1 (always)]
sched.genetic.selection.pressure:
     Selection pressure (default is '0.5')
     a probability belonging to [0 (never) .. 1 (always)]
sched.genetic.stagnation:
     Number of times a population stagnates before stopping (default is '1000')
     an integer belonging to [1 .. 2147483647]
sched.itemset.compact:
     Define if item sets are displayed compacted (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
sched.onlyfor:
     Define which items to take into account (default is 'default')
     {default,internal,nothing,schedtest}
sched.plan.printer:
     Define which plan printer to use (default is 'none')
     {detailed-txt,none,serializer,simple-txt}
sched.plan.printer.file:
     The file where to print the plan (default is '-[UTF-8]')
     required if 'sched.plan.printer' is set to 'detailed-txt' or 'sched.plan.printer' is set to 'serializer' or 'sched.plan.printer' is set to 'simple-txt'
     a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error, can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
sched.planner:
     Define which planner to use to compute plan (default is 'manual')
     {deserializer,genetic,manual}
sched.planner.file:
     The file to read the plan from
     required if 'sched.planner' is set to 'deserializer'
     a path to a file (must exist, be readable), can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
sched.report.file:
     The file where to print the report (default is '-[UTF-8]')
     required if 'sched.data' is set to 'text'
     a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error, can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
sched.report.format:
     Define which format to use (default is 'text')
     required if 'sched.data' is set to 'text'
     {json,text}
sched.runner:
     Kind of runner for runnable (default is 'multi-threaded')
     {multi-threaded,single-threaded}
sched.runner.stack-size:
     Size of Worker stack in bytes (default is '2097152')
     an integer belonging to [0 .. 9223372036854775807]
sched.runner.thread.detector.frequency:
     Define at which frequency the detector is triggered (in ms) (default is '30000')
     required if 'sched.runner' is set to 'multi-threaded'
     an integer belonging to [100 .. 2147483647]
sched.runner.thread.detector.long-running.timeout:
     Duration allowed by the detector before aborting compilation (in ms) (default is '3600000')
     an integer belonging to [0 .. 9223372036854775807]
sched.runner.thread.detectors:
     Set a list of detectors (default is 'deadlock,long-running')
     required if 'sched.runner' is set to 'multi-threaded'
     <detector-1>[,<detector-2>[,...[,<detector-n>]]] where <detector-i> is {deadlock,long-running,none}
sched.runner.thread.fixed.count:
     Number of threads used by the scheduler
     required if 'sched.runner.thread.kind' is set to 'fixed'
     an integer belonging to [2 .. 2147483647]
sched.runner.thread.kind:
     Number of threads policy used by the scheduler (default is 'num-cores')
     required if 'sched.runner' is set to 'multi-threaded'
     {num-cores,fixed} (case insensitive)
sched.runner.thread.synchronized:
     If scheduler manages synchronized schedulable by itself (default is 'true')
     required if 'sched.runner' is set to 'multi-threaded'
     {true,yes,on,1,false,no,off,0} (case insensitive)
sched.tracer:
     Define which tracer to use (default is 'none')
     {html,none,stat-only} where
          stat-only: collect statistics without event information
sched.tracer.dir:
     Define in which directory the tracer generates files
     required if 'sched.tracer' is set to 'html'
     a path to a directory (must exist, be readable, be writable)
sched.tracer.file:
     The file where to print statistics (default is '-[UTF-8]')
     required if 'sched.tracer' is set to 'stat-only'
     a path to a file (must be writable), can be '-' for standard output, can be '--' for standard error, can be ended by [<charset>] where <charset> is {Big5,Big5-HKSCS,CESU-8,EUC-JP,EUC-KR,<...>} (case insensitive)
sched.tracer.format:
     Define which format to use (default is 'text')
     required if 'sched.tracer' is set to 'stat-only'
     {json,text}
sched.tracer.probes:
     Define which probes use for tracing (default is 'event-count,gc-count,gc-duration,wall-clock')
     <probe-1>[,<probe-2>[,...[,<probe-n>]]] where <probe-i> is {event-count,gc-count,gc-duration,heap-alloc-count,heap-alloc-size,heap-usage,thread-cpu-time,wall-clock}
sched.tracer.thread:
     If tracer follows parent thread creation (default is 'true')
     {true,yes,on,1,false,no,off,0} (case insensitive)
sched.tracer.watchers:
     Define which watchers use for tracing (default is '')
     [<watcher-1>[,...[,<watcher-n>]]] where <watcher-i> is {arraylist-capacity,detailed-object-alloc,jnode-alloc,object-alloc} where
          arraylist-capacity: record state of the array backed by ArrayList
          detailed-object-alloc: record object and array allocations type by type
          jnode-alloc: record all JNode allocations
          object-alloc: record object and array allocations globally
sched.vfs.case-insensitive.algo:
     Algorithm used to encode a path name (default is 'SHA')
     {MD2,MD5,SHA,SHA-224,SHA-256,SHA-384,SHA-512} (case sensitive)
sched.vfs.case-insensitive.debug:
     generate an index file 'index.dbg' for debugging purpose (default is 'false')
     {true,yes,on,1,false,no,off,0} (case insensitive)
sched.vfs.case-insensitive.group.count:
     Number of directory used to encode a path name (default is '1')
     an integer belonging to [0 .. 2147483647]
sched.vfs.case-insensitive.group.size:
     Number of letters in directory name used to encode a path name (default is '2')
     required if 'sched.vfs.case-insensitive.group.count' is greater than 0
     an integer belonging to [0 .. 2147483647]
